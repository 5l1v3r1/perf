const repeatAnnoDist=function(e,t,n=!0){const a={Exon:["EP","EN"],Intron:["IP","IN"],Genic:["GP","GN"],Intergenic:["DP","DN"]},o={Promoter:["EP","IP","GP","DP"],"Non-Promoter":["EN","IN","GN","DN"]};let r=Object.keys(a),s=Object.keys(o),i={};if("all"===t){let t={},c=0,f=0;r.forEach(n=>{let o=0;Object.keys(e).forEach(t=>{a[n].forEach(n=>{o+=e[t][n]})}),t[n]=o,c+=o}),s.forEach(n=>{let a=0;Object.keys(e).forEach((t,r)=>{o[n].forEach(n=>{a+=e[t][n]})}),t[n]=a,f+=a}),n&&(r.forEach(e=>{t[e]=(100*t[e]/c).toFixed(2)}),s.forEach(e=>{t[e]=(100*t[e]/f).toFixed(2)})),i=t}else{for(let n of t){if(Object.keys(e).indexOf(n)>-1){let t={};r.forEach(o=>{t[o]=_.sum(a[o].map(t=>e[n][t]))}),s.forEach(a=>{t[a]=_.sum(o[a].map(t=>e[n][t]))}),i[n]=t}}for(let a of t){if(Object.keys(e).indexOf(a)>-1){const e=_.sum(r.map(e=>i[a][e])),t=_.sum(s.map(e=>i[a][e]));if(n){for(let t of r)i[a][t]=(100*i[a][t]/e).toFixed(2);for(let e of s)i[a][e]=(100*i[a][e]/t).toFixed(2)}}}}return i},kmerAnnoDist=function(e,t,n="annotation"){const a=["Exon","Intron","Intergenic","Genic","Promoter","Non-Promoter"],o={},r={},s=[];repeats.forEach(e=>{o[e.kmer]=_.map(e.repeats,"class"),r[e.kmer],s.push(e.kmer)});const i={};for(const e of a)i[e]={Monomer:0,Dimer:0,Trimer:0,Tetramer:0,Pentamer:0,Hexamer:0};for(let n in o){const a=o[n],s=repeatAnnoDist(e,a,!1),c=repeatFrequency(t,a,"kmer","freq");r[n]=_.sumBy(c,"value");for(let e in s)for(let t in s[e])i[t][n]+=s[e][t]}const c={data:{}};if("kmer"===n){c.keys=s;for(const e in i){c.data[e]=[];for(const t of s){const n=i.Exon[t]+i.Intron[t]+i.Intergenic[t]+i.Genic[t];n>0&&c.data[e].push((100*i[e][t]/n).toFixed(2))}}}else for(const e of s){c.data[e]=[],c.keys=[];for(const t in i){const n=_.sum(Object.values(i[t]));n>0&&(c.keys.push(t),c.data[e].push((100*i[t][e]/n).toFixed(2)))}}return c},tssHistData=function(e,t,n,a,o){const r=_.range(-4975,4976,50),s=parseInt(a/50),i=parseInt(r.length/s),c=-5e3+parseInt(a/2),f=5001-parseInt(a/2),l=_.range(c,f,a),p={};n.forEach(t=>{if(p[t]=Array(l.length).fill(0),Object.keys(e).indexOf(t)>-1)for(let n=0;n<i;n++){let a=_.sum(e[t].slice(n*s,(n+1)*s));p[t][n]=a}});for(let e of n){if("density"===o){const t=_.sum(p[e]);let n;n=0!=t?_.map(p[e],(e,n)=>{let a=e/t;return[l[n],a.toFixed(3)]}):_.map(p[e],(e,t)=>[l[t],0]),p[e]=n}else{let t=_.map(p[e],(e,t)=>{let n=e;return[l[t],n]});p[e]=t}p[e].push([5e3,p[e][p[e].length-1][1]]),p[e].unshift([-5e3,p[e][0][1]])}return{data:p}};if(data.info.annoInfo){const e=["A","C"];let t=!1;$("#anno-stackbar-repeat-select").multiSelect({selectableOptgroup:!0,afterSelect:function(t){t.forEach(function(t){-1==e.indexOf(t)&&e.push(t)})},afterDeselect:function(t){t.forEach(t=>{e.splice(e.indexOf(t),1)})}});const n=repeatAnnoDist(data.info.annoInfo.repAnno,allRepClasses,!1);var annostackbar_options={series:[],chart:{type:"bar",stacked:!0,stackType:"100%"},plotOptions:{},stroke:{width:1,colors:["#fff"]},title:{text:"Repeat Genomic distribution"},xaxis:{},tooltip:{y:{formatter:function(e){return e}}},fill:{opacity:1},legend:{position:"top",horizontalAlign:"left",offsetX:40}},annostackbar_chart=new ApexCharts(document.querySelector("#anno-stackbar-plot-area"),annostackbar_options);annostackbar_chart.render();const a=["Exon","Intron","Genic","Intergenic"],o=function(){const o=[];t?(a.forEach(function(t){const a=_.map(e,e=>parseFloat(n[e][t]));o.push({name:t,data:[_.sum(a)]})}),annostackbar_chart.updateOptions({series:o,xaxis:{categories:["All selected repeats"]}})):(a.forEach(function(t){const a=_.map(e,e=>parseFloat(n[e][t]));o.push({name:t,data:a})}),annostackbar_chart.updateOptions({series:o,xaxis:{categories:e}}))};$(".ui.checkbox.anno-stackbar").checkbox({onChange:function(){t=!t,o()}}),$("#anno-stackbar-plot-button").click(function(){o()}),o();const r=["A","C"];let s=500;$("#anno-area-repeat-select").multiSelect({selectableOptgroup:!0,afterSelect:function(e){e.forEach(function(e){-1==r.indexOf(e)&&r.push(e)})},afterDeselect:function(e){e.forEach(e=>{r.splice(r.indexOf(e),1)})}}),$(".ui .dropdown.bin-size").dropdown({values:[{name:100,value:100},{name:200,value:200},{name:500,value:500,selected:!0},{name:1e3,value:1e3}],onChange:function(e){s=e}});var annoarea_options={series:[],chart:{type:"area"},plotOptions:{},stroke:{width:1},title:{text:"Average repeat distribution around TSS"},xaxis:{type:"numeric",min:-5e3,max:5e3,tickAmount:1e4/s,axisTicks:{height:8}},tooltip:{y:{formatter:function(e){return e}},x:{formatter:function(e){return`${e-parseInt(s/2)}bp - ${e+parseInt(s/2)}bp`}}},fill:{opacity:1},legend:{position:"top",horizontalAlign:"left",offsetX:40}},annoarea_chart=new ApexCharts(document.querySelector("#anno-area-plot-area"),annoarea_options);annoarea_chart.render();const i=function(){const e=tssHistData(data.info.annoInfo.TSS_dist,data.info.annoInfo.TSS_histBinEdges,r,s,"density").data,t=[];for(let n of Object.keys(e))t.push({name:n,data:_.map(e[n],e=>[e[0],parseFloat(e[1])])});annoarea_chart.updateOptions({series:t,xaxis:{type:"numeric",min:-5e3,max:5e3,tickAmount:20,axisTicks:{height:8}}})};$("#anno-area-plot-button").click(function(){i()}),i()}else document.getElementById("anno-charts-main").style.display="none";