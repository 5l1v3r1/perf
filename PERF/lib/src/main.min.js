for(const e in data.info.genomeInfo)$(`.value.${e}`).html(data.info.genomeInfo[e]);for(const e in data.info.repInfo)"lenFrequency"!=e&&$(`.value.${e}`).html(data.info.repInfo[e]);const menuLayout=function(){if(window.innerWidth<800){const e=document.getElementById("navmenu");e.classList.remove("vertical"),e.parentElement.style.width="100%",document.getElementById("content-display").style.width="100%"}else{const e=document.getElementById("navmenu");e.classList.add("vertical"),e.parentElement.style.width="5%",document.getElementById("content-display").style.width="95%"}};window.onresize=function(){menuLayout()};const numPrefixObj=["Monomer","Dimer","Trimer","Tetramer","Pentamer","Hexamer","Septamer","Octamer","Enneamer","Decamer"],plotData=data.info.repInfo.lenFrequency,allRepClasses=data.info.repInfo.allRepClasses;$(".ui.dropdown").dropdown(),$(".chart .item").tab(),$(".anno-chart .item").tab(),$(".ui .units").dropdown({values:[{name:"length",value:1,selected:!0},{name:"units",value:0}]});const barData={};allRepClasses.forEach(function(e){if(-1!=Object.keys(plotData).indexOf(e)&&0!=plotData[e]){const t=_.map(Object.keys(plotData[e]),e=>parseInt(e));let a=0,n=0;for(let i in t)i=t[i],a+=_.sum(plotData[e][i]),n+=_.sum(plotData[e][i])*i;barData[e]=[n,a]}else barData[e]=[0,0]});let bar_dataType=1,bar_sortSelected=[],bar_sortOrder=1,bar_numReps=10,bar_repSelected=[],sorted_barKeys=_.sortBy(Object.keys(barData),e=>barData[e][bar_dataType]),bar_activeSelected=[];const bar_options={chart:{type:"bar"},plotOptions:{bar:{horizontal:!1,columnwidth:"55%"}},series:[{data:[]}],dataLabels:{enabled:!1},yaxis:{title:{text:"Frequency",style:{fontSize:"16px","font-weight":"bold"}}},xaxis:{categories:[],title:{text:"Repeat Class",style:{fontSize:"16px","font-weight":"bold"}}},title:{text:"Repeat Frequency",align:"left"}},bar_chart=new ApexCharts(document.querySelector("#bar-plot-area"),bar_options);bar_chart.render();const plotBar=function(e){const t=[];e.forEach(function(e){t.push(barData[e][bar_dataType])});const a=1==bar_dataType?"Frequency":"Bases";bar_chart.updateOptions({series:[{name:a,data:t}],yaxis:{title:{text:a,style:{fontSize:"16px","font-weight":"bold"}}},xaxis:{categories:e},animate:!0})};$("#bar-numRep").change(function(){bar_numReps=this.value}),$(".ui .dropdown.sort-order").dropdown({values:[{name:"top",value:1,selected:!0},{name:"bottom",value:0}],onChange:function(e){bar_sortOrder=e}}),$("#bar-sortPlot-button").click(function(){1==bar_sortOrder?(bar_sortSelected=sorted_barKeys.slice(sorted_barKeys.length-bar_numReps)).reverse():bar_sortSelected=sorted_barKeys.slice(0,bar_numReps),plotBar(bar_activeSelected=bar_sortSelected)}),$("#bar-sortPlot-button").trigger("click"),$("#bar-repeat-select").multiSelect({selectableOptgroup:!0,afterSelect:function(e){e.forEach(function(e){-1==bar_repSelected.indexOf(e)&&bar_repSelected.push(e)})},afterDeselect:function(e){e.forEach(e=>{bar_repSelected.splice(bar_repSelected.indexOf(e),1)})}}),$("#bar-repPlot-button").click(function(){bar_repSelected=_.sortBy(bar_repSelected,e=>allRepClasses.indexOf(e)),plotBar(bar_activeSelected=bar_repSelected)}),$(".ui.checkbox.bar").checkbox({onChange:function(e){bar_dataType=this.value,sorted_barKeys=_.sortBy(Object.keys(barData),e=>barData[e][bar_dataType]),plotBar(bar_activeSelected)}}),$("#asort-alpha").click(function(){bar_activeSelected=bar_activeSelected.sort(function(e,t){return allRepClasses.indexOf(e)-allRepClasses.indexOf(t)}),plotBar(bar_activeSelected)}),$("#dsort-alpha").click(function(){(bar_activeSelected=bar_activeSelected.sort(function(e,t){return allRepClasses.indexOf(e)-allRepClasses.indexOf(t)})).reverse(),plotBar(bar_activeSelected)}),$("#asort-num").click(function(){bar_activeSelected=_.sortBy(bar_activeSelected,e=>barData[e][bar_dataType]),plotBar(bar_activeSelected)}),$("#dsort-num").click(function(){(bar_activeSelected=_.sortBy(bar_activeSelected,e=>barData[e][bar_dataType])).reverse(),plotBar(bar_activeSelected)});let pie_activeSelected=allRepClasses,pie_dataType=1,pie_group=!0;$("#pie-kmer-toggle").checkbox({onChecked:function(){pie_group=!0,plotPie(pie_activeSelected)},onUnchecked:function(){pie_group=!1,plotPie(pie_activeSelected)}}),$("#pie-repeat-select").multiSelect({selectableOptgroup:!0,afterSelect:function(e){e.forEach(function(e){-1==pie_activeSelected.indexOf(e)&&pie_activeSelected.push(e)})},afterDeselect:function(e){e.forEach(e=>{pie_activeSelected.splice(pie_activeSelected.indexOf(e),1)})}}),$(".ui.checkbox.pie.radio.pie-data-type").checkbox({onChange:function(){pie_dataType=this.value,plotPie(pie_activeSelected)}});const pie_options={chart:{type:"pie"},labels:["Monomers","Dimers","Trimers","Tetramers","Pentamers","Hexamers"],series:[10,10,10,10,10,10],responsive:[{breakpoint:480}],colors:["#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#66aa00","#b82e2e","#316395","#994499","#22aa99","#aaaa11","#6633cc","#e67300","#8b0707","#651067","#329262","#5574a6","#3b3eac"]};let pie_chart=new ApexCharts(document.querySelector("#pie-plot-area"),pie_options);pie_chart.render();const plotPie=function(e){let t=[];if((e=e.sort(function(e,t){return allRepClasses.indexOf(e)-allRepClasses.indexOf(t)})).forEach(function(e){t.push(barData[e][pie_dataType])}),1==pie_group){t=[];let a=[];const n=_.uniq(_.map(e,e=>e.length)).sort();n.forEach(e=>{a.push(numPrefixObj[e-1]),t.push(0)}),e.forEach(e=>{t[n.indexOf(e.length)]+=barData[e][pie_dataType]}),e=a}pie_chart.updateOptions({labels:e,series:t,animate:!0})};$("#pie-plot-button").click(function(){pie_activeSelected=_.sortBy(pie_activeSelected,e=>allRepClasses.indexOf(e)),plotPie(pie_activeSelected)}),plotPie(pie_activeSelected);let minLength=data.info.repInfo.minLength,minUnits=data.info.repInfo.minUnits,minRange=12,maxRange=50,line_dataType=1,line_activeSelected=["A","C"];$(".ui .dropdown.units").dropdown({values:[{name:"length",value:1,selected:!0},{name:"units",value:0}],onChange:function(e){line_dataType=e}}),$("#line-repeat-select").multiSelect({selectableOptgroup:!0,afterSelect:function(e){e.forEach(function(e){-1==line_activeSelected.indexOf(e)&&line_activeSelected.push(e)})},afterDeselect:function(e){e.forEach(e=>{line_activeSelected.splice(line_activeSelected.indexOf(e),1)})}}),$("#line-min-len").change(function(){minRange=parseInt(this.value),plotLine(line_activeSelected)}),$("#line-max-len").change(function(){maxRange=parseInt(this.value),plotLine(line_activeSelected)});const line_options={chart:{type:"line",zoom:{enabled:!1}},dataLabels:{enabled:!1},stroke:{curve:"straight",width:2},series:[],title:{text:"Repeat sequence length(bp) vs Abundance",align:"left"},grid:{row:{colors:["#f3f3f3","transparent"],opacity:.5}},tooltip:{x:{formatter:function(e){return`Length: ${e}bp`}}},markers:{size:0},yaxis:{title:{text:"Frequency",style:{fontSize:"16px","font-weight":"bold"}}},xaxis:{title:{text:"Length (bp)",style:{fontSize:"16px","font-weight":"bold"}},tickAmount:parseInt((maxRange-minRange)/2)},legend:{position:"top"}},line_chart=new ApexCharts(document.querySelector("#line-plot-area"),line_options);line_chart.render();const plotLine=function(e){const t=_.range(minRange,maxRange+1),a=[];e.forEach(function(e){const t=[];if(0==line_dataType)for(let a=minRange;a<=maxRange;a++){let n=0;for(let t=0;t<e.length;t++){const i=a*e.length+t;n+=plotData[e][i]?_.sum(plotData[e][i]):0}t.push(n)}else for(let a=minRange;a<=maxRange;a++){const n=plotData[e][a]?_.sum(plotData[e][a]):0;t.push(n)}a.push({name:e,data:t})}),line_chart.updateOptions({series:a,xaxis:{categories:t}})};$("#line-plot-button").click(function(){plotLine(line_activeSelected)}),plotLine(line_activeSelected);